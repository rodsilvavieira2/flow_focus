name: Release Linux (Flutter)

on:
  push:
    branches: [release]

permissions:
  contents: write

env:
  APP_NAME: flow_focus

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64, aarch64]

    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev \
            libnotify-dev libdbus-1-dev

      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - run: flutter config --enable-linux-desktop
      - run: flutter pub get

      # -------------------
      # BUILD FOR X64
      # -------------------
      - name: Build for x64
        if: matrix.arch == 'x64'
        run: flutter build linux --release

      # -------------------
      # BUILD FOR AARCH64
      # -------------------
      - name: Enable QEMU for Docker multi-arch
        if: matrix.arch == 'aarch64'
        run: |
          docker run --privileged --rm tonistiigi/binfmt --install all

      - name: Build for aarch64 using Docker
        if: matrix.arch == 'aarch64'
        run: |
          docker run --rm -t \
            --platform linux/arm64 \
            -v $PWD:/app -w /app \
            registry.gitlab.com/theonewiththebraid/flutter-dockerimages:3.22.2 \
            flutter build linux --release --target-platform linux-arm64

      # -------------------
      # PACKAGE
      # -------------------
      - name: Package binary
        run: |
          cd build/linux/${{ matrix.arch == 'x64' && 'x64' || 'arm64' }}/release
          tar -czf "$APP_NAME-linux-${{ matrix.arch }}.tar.gz" bundle
          mv "$APP_NAME-linux-${{ matrix.arch }}.tar.gz" "$GITHUB_WORKSPACE/"

      - uses: actions/upload-artifact@v4
        with:
          name: linux-binary-${{ matrix.arch }}
          path: ${{ env.APP_NAME }}-linux-${{ matrix.arch }}.tar.gz
          retention-days: 3

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: linux-binary-x64
          path: .

      - uses: actions/download-artifact@v4
        with:
          name: linux-binary-aarch64
          path: .

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: linux-${{ github.run_number }}
          name: "Linux Build ${{ github.run_number }}"
          generate_release_notes: true
          files: |
            ${{ env.APP_NAME }}-linux-x64.tar.gz
            ${{ env.APP_NAME }}-linux-aarch64.tar.gz
