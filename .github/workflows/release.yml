name: Release Linux (Flutter)

on:
  push:
    branches:
      - master # ajuste se usar outro branch de release

permissions:
  contents: write # necessário para criar / atualizar a release

env:
  APP_NAME: flow_focus # <-- troque pelo nome real do seu executável

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Dependências que o Flutter precisa para compilar no Ubuntu
      - name: Instalar dependências de sistema
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev

      # Instala o SDK Flutter e habilita cache (~/.pub-cache e bin/cache)
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Habilitar suporte desktop Linux
        run: flutter config --enable-linux-desktop

      - name: Resolver dependências
        run: flutter pub get

      - name: Build release Linux
        run: flutter build linux --release

      - name: Empacotar binário
        run: |
          cd build/linux/x64/release
          tar -czf ${APP_NAME}-linux-x64.tar.gz bundle
          mv ${APP_NAME}-linux-x64.tar.gz ${GITHUB_WORKSPACE}/

      - uses: actions/upload-artifact@v4
        with:
          name: linux-binary
          path: ${{ env.APP_NAME }}-linux-x64.tar.gz

  publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: linux-binary
          path: .

      # Cria (ou atualiza) a release e anexa o arquivo
      - name: Criar release
        id: create_release
        uses: actions/create-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: linux-${{ github.run_number }} # ex.: linux-23
          release_name: "Linux build ${{ github.run_number }}"
          generate_release_notes: true

      - name: Enviar binário para a release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.APP_NAME }}-linux-x64.tar.gz
          asset_name: ${{ env.APP_NAME }}-linux-x64.tar.gz
          asset_content_type: application/gzip
