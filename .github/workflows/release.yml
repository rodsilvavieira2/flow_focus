name: Release Linux (Flutter)

on:
  push:
    branches: [release] # Adjust if you use a different release branch

permissions:
  contents: write # Necessary to create/update Releases

env:
  APP_NAME: flow_focus
  FLUTTER_VERSION: "3.22.2" # Specify a precise Flutter version for consistency

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64, arm64] # Changed aarch64 to arm64 for consistency with Flutter's target-platform naming

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU (for ARM64 build on x64 runner)
        if: matrix.arch == 'arm64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64

      - name: Install Linux build dependencies
        run: |
          sudo apt-get update -q
          sudo apt-get install -y \
            clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev \
            libnotify-dev libdbus-1-dev

      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: "stable" # Or specify 'beta', 'dev'
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          cache-key: "flutter-${{ runner.os }}-${{ env.FLUTTER_VERSION }}-${{ hashFiles('**/pubspec.lock') }}" # More specific cache key

      - name: Configure Flutter for Linux and get dependencies
        run: |
          flutter config --enable-linux-desktop
          flutter pub get

      - name: Build Flutter Linux for x64 (native)
        if: matrix.arch == 'x64'
        run: flutter build linux --release --target-platform=linux-x64

      - name: Build Flutter Linux for arm64 (cross-compile using Docker)
        if: matrix.arch == 'arm64'
        run: |
          docker run --rm --platform linux/arm64 \
            -v "${PWD}:/app" -w /app \
            ghcr.io/cirruslabs/flutter:${{ env.FLUTTER_VERSION }} \
            bash -c "flutter config --enable-linux-desktop && flutter pub get && flutter build linux --release --target-platform=linux-arm64"

      - name: Determine Build Output Directory
        id: build_paths
        run: |
          if [ "${{ matrix.arch }}" == "x64" ]; then
            echo "output_dir=build/linux/x64/release/bundle" >> $GITHUB_OUTPUT
            echo "archive_name=${{ env.APP_NAME }}-linux-x64.tar.gz" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.arch }}" == "arm64" ]; then
            echo "output_dir=build/linux/arm64/release/bundle" >> $GITHUB_OUTPUT
            echo "archive_name=${{ env.APP_NAME }}-linux-arm64.tar.gz" >> $GITHUB_OUTPUT
          fi

      - name: Package release binary
        run: |
          tar -czf "${{ steps.build_paths.outputs.archive_name }}" -C "${{ steps.build_paths.outputs.output_dir }}/.." bundle
          # The -C changes directory to the parent of "bundle" before archiving, so the tarball contains "bundle/"
          # The archive will be created in GITHUB_WORKSPACE by default.

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-binary-${{ matrix.arch }}
          path: ${{ steps.build_paths.outputs.archive_name }}
          retention-days: 3

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download x64 binary artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-binary-x64
          path: . # Download to current directory

      - name: Download arm64 binary artifact
        uses: actions/download-artifact@v4
        with:
          name: linux-binary-aarch64 # Keep original artifact name if you prefer, or change to arm64
          path: . # Download to current directory

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }} # Using v prefix for tags is common
          name: "Release v${{ github.run_number }}"
          generate_release_notes: true
          files: |
            ${{ env.APP_NAME }}-linux-x64.tar.gz
            ${{ env.APP_NAME }}-linux-aarch64.tar.gz # Adjusted to match typical arm64 artifact name if you change upload name
