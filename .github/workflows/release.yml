name: Flow Focus

on:
  push:
    branches: [main, release]

env:
  APP_NAME: flow_focus
  FLUTTER_VERSION: 3.32.1

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]

    steps:
      # 1. Checkout code
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Install dependencies
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y clang cmake ninja-build pkg-config libgtk-3-dev \
            gcc-aarch64-linux-gnu g++-aarch64-linux-gnu liblzma-dev

      # 3. Set up Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: stable
          cache: true
          cache-key: "flutter-${{ runner.os }}-${{ env.FLUTTER_VERSION }}-${{ hashFiles('**/pubspec.lock') }}" # More specific cache key

      # 4. Enable desktop target
      - run: flutter config --enable-linux-desktop

      # 5. Get packages
      - run: flutter pub get

      # 6. Build for amd64 (native)
      - name: Build for amd64
        if: matrix.arch == 'amd64'
        run: |
          flutter build linux --release
          mkdir -p dist/amd64
          cp -r build/linux/x64/release/bundle/* dist/amd64/

      # 7. Cross-compile for arm64
      - name: Cross-compile for arm64
        if: matrix.arch == 'arm64'
        run: |
          flutter build linux --release
          mkdir -p dist/arm64
          cp -r build/linux/aarch64/release/bundle/* dist/arm64/

      # 8. Package output
      - name: Package ${{ matrix.arch }}
        run: |
          cd dist/${{ matrix.arch }}
          tar -czvf ../../${{ env.APP_NAME }}-${{ matrix.arch }}.tar.gz .

      # 9. Upload artifact
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-${{ matrix.arch }}
          path: ${{ env.APP_NAME }}-${{ matrix.arch }}.tar.gz
